////隐藏部分为录入数据
//	RD0 = 0xD0000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD0000040;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD0000060;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD0000080;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD00000A0;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD00000C0;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD00000E0;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD0000370;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xD0000390;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00000000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x78797FFF;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x6BCA71C7;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x61866666;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x590B5D17;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x51EC5555;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x4BDA4EC5;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x469F4925;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x42114444;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x41F84000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x45BE43E1;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x4952478D;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x4CBB4B0B;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x50004E62;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x53235195;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x562954A9;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x591557A2;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x07C30000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x15FF0F14;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x22CF1C90;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x2E7428C3;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x392033E6;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x42FA3E25;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x4C1F47A1;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x54A85076;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x03240000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x09640646;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x0F8D0C7C;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x15901294;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x1B5D187E;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x20E71E2B;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x2620238E;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x2AFB289A;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3FEC4000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3F4F3FB1;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3E153EC5;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3C423D3F;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x39DB3B21;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x36E53871;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x33683537;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x2F6C3179;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x64850648;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x64877FF6;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x64887FFE;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00007FFF;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x9fad2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x20009fad;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x5dc10000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x1de3dba5;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x04218000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xbfd22000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00002000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3fab0000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x80009fcf;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x04218000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xbee82000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3ee80000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7a5ea000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7152d821;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449b6f;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xbff52000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x00001000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x3f920000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x80008fd1;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05448000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfcf02000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfcf05cf2;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7bb02000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7624da53;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449d32;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfe3b2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfe3b5e3d;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7dac2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7c30dd50;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449f40;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfb6c2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfb6c5b74;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7a452000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x74d8d8fa;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449d39;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfcbe2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfcbe5cc6;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7c362000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7ac8dbe5;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449f45;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf84a2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf84a5867;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x77d42000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7299d6b0;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449d45;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfa0d2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xfa0d5a2a;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x79ab2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x786ad97b;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449f58;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf4262000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf426547f;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x73bf2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x6e92d2e4;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449d34;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf5ef2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf5ef5649;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x75902000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x7452d5a0;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449f54;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xeedf2000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xeedf4fb7;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x6e842000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x697fce3f;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x05449d29;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf0a22000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0xf0a2517d;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//	RD0 = 0x70472000;
//	SET_M(RA0, RD0);
//	RA0 += 1 * MMU_BASE;
//
//隐藏部分为输出结果	
//RD0 = RN_GRAM0;
//RA0 = RD0;
//RD0 = RN_GRAM1;
//RD0 = 128;		//序列长度
//SingleSerSquare();//单序列平方
//0x31ff0000
//0x11ff0000
//0x11ff0000
//0x11ff0000
//0x11ff0000
//0x11ff0001
//0x11ff0001
//0x11ff0017
//0x11ff0019
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x71637ffe
//0x5ac46522
//0x4a4d51ea
//0x3df143b3
//0x346e38e3
//0x2cf23079
//0x26f629cc
//0x22192468
//0x21ff2000
//0x25ff23ff
//0x29ff27ff
//0x2dff2bfe
//0x32002fff
//0x35ff33ff
//0x39ff37fe
//0x3dff3bff
//0x00780000
//0x03c701c6
//0x0977065f
//0x10db0cfb
//0x197e150a
//0x230b1e2b
//0x2d442815
//0x37fd3293
//0x00130000
//0x00b0004e
//0x01e30137
//0x03a102b2
//0x05d904af
//0x0875071c
//0x0b5b09e0
//0x0e6e0ce0
//0x1fec2000
//0x1f4f1fb1
//0x1e1c1ec8
//0x1c5e1d4e
//0x1a261b50
//0x178a18e3
//0x14a5161f
//0x1191131f
//0x4ef0004e
//0x4ef37fec
//0x4ef57ffc
//0x00007ffe
//0x487c0800
//0x0800487c
//0x44ab0000
//0x06fa0a53
//0x00227ffe
//0x202e0800
//0x00000800
//0x1fab0000
//0x7ffe4849
//0x00227ffe
//0x211a0800
//0x1eea0000
//0x74fb47ff
//0x64520c6b
//0x00374f03
//0x200b0800
//0x00000200
//0x1f920000
//0x7ffe6252
//0x00377ffe
//0x00120800
//0x0012437d
//0x77850800
//0x6d0a0b16
//0x00374c44
//0x00060800
//0x00064561
//0x7b620800
//0x787d0966
//0x00374921
//0x00290800
//0x00294157
//0x74cb0800
//0x6aa80be5
//0x00374c39
//0x00150800
//0x0015433d
//0x78880800
//0x75c60a2f
//0x00374919
//0x00760800
//0x00763d0d
//0x702d0800
//0x66990d55
//0x00374c27
//0x00460800
//0x00463f83
//0x73a60800
//0x71470b97
//0x003748fc
//0x01180800
//0x011837c7
//0x68aa0800
//0x5f830fe5
//0x00374c41
//0x00ca0800
//0x00ca3a2a
//0x6bf90800
//0x69b40e07
//0x00374902
//0x024a0800
//0x024a31a4
//0x5f6b0800
//0x56f21356
//0x00374c52
//0x01d80800
//0x01d833e0
//0x627c0800


//RD0 = RN_GRAM0;
//RA0 = RD0;
//RD0 = RN_GRAM0;
//RA1 = RD0;
//RD1 = RN_GRAM1;
//RD0 = 128;		//序列长度
//MultiSum();//乘累加
//0x31ff0000
//0x43ff0000
//0x55ff0000
//0x67ff0000
//0x79ff0001
//0x8bff0002
//0x9dff0004
//0xafff001b
//0xc1ff0035
//0xc1ff0035
//0xc1ff0035
//0xc1ff0035
//0xc1ff0035
//0xc1ff0035
//0xc1ff0035
//0xc1ff0035
//0x33638033
//0x8e28e555
//0xd8753740
//0x16677af4
//0x4ad5b3d7
//0x77c8e450
//0x9ebf0e1c
//0xc0d83285
//0xe2d85285
//0x08d87684
//0x32d89e83
//0x60d7ca82
//0x92d7fa82
//0xc8d62e81
//0x02d5667f
//0x40d5a27e
//0x414da27e
//0x4515a445
//0x4e8caaa5
//0x5f68b7a0
//0x78e6ccab
//0x9bf2ead7
//0xc93712ec
//0x01344580
//0x01484580
//0x01f845cf
//0x03dc4706
//0x077e49b9
//0x0d574e68
//0x15cd5585
//0x21285f65
//0x2f966c46
//0x4f828c46
//0x6ed2abf7
//0x8cefcabf
//0xa94de80d
//0xc373035e
//0xdafe1c41
//0xefa33261
//0x01354580
//0x502545cf
//0x9f19c5bb
//0xee0e45b7
//0xee0ec5b5
//0x368acdb5
//0x3e8a1631
//0x83361631
//0x8a302085
//0x8a52a084
//0xaa81a884
//0xaa81b084
//0xca2cb084
//0x4a2bf8cd
//0x4a4d78cc
//0x6b6780cc
//0x8a5280cc
//0xff4dc8cc
//0x63a0d538
//0x63d8243b
//0x83e32c3b
//0x83e32e3b
//0xa3752e3b
//0x2374908d
//0x23ab108c
//0x23be188c
//0x23d15c0a
//0x9b56640a
//0x08606f21
//0x0898bb66
//0x089ec366
//0x08a408c7
//0x840710c7
//0xfc841a2e
//0xfcbc634f
//0xfce66b4f
//0xfd10aca6
//0x71dbb4a6
//0xdc84c08c
//0xdcbc0cc6
//0xdcd114c6
//0xdce65804
//0x556f6004
//0xcb356a33
//0xcb6db34c
//0xcbe4bb4c
//0xcc5bf85a
//0x3c88005a
//0xa3210db0
//0xa35959d7
//0xa3a061d7
//0xa3e6a15a
//0x178da95a
//0x88d4b4f2
//0x890bfdef
//0x8a2405ef
//0x8b3d3db6
//0xf3e745b6
//0x536b559c
//0x53a2a1dd
//0x546da9dd
//0x5538e407
//0xc132ec07
//0x2ae6fa0f
//0x2b1e4312
//0x2d694b12
//0x2fb37cb7
//0x8f1f84b7
//0xe612980d
//0xe649e460
//0xe821ec60
//0xe9fa2041
//0x4c762841


//RA0 = RN_GRAM0;
//RD1 = 0x00020002;
//RA1 = RN_GRAM1;
//RD0 = 128;		//序列长度
//MultiConstH16L16();
//0xffff0000
//0xffff0000
//0xffff0000
//0xffff0000
//0xffff0000
//0xffff0000
//0xffff0000
//0xffff0000
//0xffff0000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00010001
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00010000
//0x00010001
//0x00010001
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000001
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00010000
//0x00010001
//0x00010001
//0x00000001
//0xfffe0000
//0x0000fffe
//0x00010000
//0x0000ffff
//0x0000fffe
//0xfffe0000
//0x00000000
//0x00000000
//0xfffefffe
//0x0000fffe
//0xfffe0000
//0x00000000
//0x0001fffe
//0x0001ffff
//0x0000fffe
//0xfffe0000
//0x00000000
//0x00000000
//0xfffefffe
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000
//0x0001ffff
//0x0000fffe
//0xffff0000
//0xffff0001
//0x00010000


//RA0 = RN_GRAM0;
//RD0 = 0b10010110;
//RD1 = 128;
//Cal_Single_Shift();
//32bit序列左移两位
//0x40000000
//0x40000100
//0x40000180
//0x40000200
//0x40000280
//0x40000300
//0x40000380
//0x40000dc0
//0x40000e40
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0xe1e5fffc
//0xaf29c71c
//0x86199998
//0x642d745c
//0x47b15554
//0x2f693b14
//0x1a7d2494
//0x08451110
//0x07e10000
//0x16f90f84
//0x25491e34
//0x32ed2c2c
//0x40013988
//0x4c8d4654
//0x58a552a4
//0x64555e88
//0x1f0c0000
//0x57fc3c50
//0x8b3c7240
//0xb9d0a30c
//0xe480cf98
//0x0be8f894
//0x307d1e84
//0x52a141d8
//0x0c900000
//0x25901918
//0x3e3431f0
//0x56404a50
//0x6d7461f8
//0x839c78ac
//0x98808e38
//0xabeca268
//0xffb10000
//0xfd3cfec4
//0xf854fb14
//0xf108f4fc
//0xe76cec84
//0xdb94e1c4
//0xcda0d4dc
//0xbdb0c5e4
//0x92141920
//0x921dffd8
//0x9221fff8
//0x0001fffc
//0x7eb48000
//0x80027eb4
//0x77040000
//0x778f6e94
//0x10860000
//0xff488000
//0x00008000
//0xfeac0000
//0x00027f3c
//0x10860000
//0xfba08000
//0xfba00000
//0xe97a8000
//0xc54b6084
//0x15126dbc
//0xffd48000
//0x00004000
//0xfe480000
//0x00023f44
//0x15120000
//0xf3c08000
//0xf3c173c8
//0xeec08000
//0xd893694c
//0x151274c8
//0xf8ec8000
//0xf8ed78f4
//0xf6b08000
//0xf0c37540
//0x15127d00
//0xedb08000
//0xedb16dd0
//0xe9148000
//0xd36363e8
//0x151274e4
//0xf2f88000
//0xf2f97318
//0xf0d88000
//0xeb236f94
//0x15127d14
//0xe1288000
//0xe129619c
//0xdf508000
//0xca675ac0
//0x15127514
//0xe8348000
//0xe83568a8
//0xe6ac8000
//0xe1ab65ec
//0x15127d60
//0xd0988000
//0xd09951fc
//0xcefc8000
//0xba4b4b90
//0x151274d0
//0xd7bc8000
//0xd7bd5924
//0xd6408000
//0xd14b5680
//0x15127d50
//0xbb7c8000
//0xbb7d3edc
//0xba108000
//0xa5ff38fc
//0x151274a4
//0xc2888000
//0xc28945f4
//0xc11c8000


//RA0 = RN_GRAM0;
//RA1 = RN_GRAM0;
//RD0 = 128;		//序列长度
//Dual_Ser_Add32();
////32bit双序列加
//0xa0000000
//0xa0000080
//0xa00000c0
//0xa0000100
//0xa0000140
//0xa0000180
//0xa00001c0
//0xa00006e0
//0xa0000720
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0xf0f2fffe
//0xd794e38e
//0xc30ccccc
//0xb216ba2e
//0xa3d8aaaa
//0x97b49d8a
//0x8d3e924a
//0x84228888
//0x83f08000
//0x8b7c87c2
//0x92a48f1a
//0x99769616
//0xa0009cc4
//0xa646a32a
//0xac52a952
//0xb22aaf44
//0x0f860000
//0x2bfe1e28
//0x459e3920
//0x5ce85186
//0x724067cc
//0x85f47c4a
//0x983e8f42
//0xa950a0ec
//0x06480000
//0x12c80c8c
//0x1f1a18f8
//0x2b202528
//0x36ba30fc
//0x41ce3c56
//0x4c40471c
//0x55f65134
//0x7fd88000
//0x7e9e7f62
//0x7c2a7d8a
//0x78847a7e
//0x73b67642
//0x6dca70e2
//0x66d06a6e
//0x5ed862f2
//0xc90a0c90
//0xc90effec
//0xc910fffc
//0x0000fffe
//0x3f5a4000
//0x40013f5a
//0xbb820000
//0x3bc7b74a
//0x08430000
//0x7fa44000
//0x00004000
//0x7f560000
//0x00013f9e
//0x08430000
//0x7dd04000
//0x7dd00000
//0xf4bd4000
//0xe2a5b042
//0x0a8936de
//0x7fea4000
//0x00002000
//0x7f240000
//0x00011fa2
//0x0a890000
//0xf9e04000
//0xf9e0b9e4
//0xf7604000
//0xec49b4a6
//0x0a893a64
//0xfc764000
//0xfc76bc7a
//0xfb584000
//0xf861baa0
//0x0a893e80
//0xf6d84000
//0xf6d8b6e8
//0xf48a4000
//0xe9b1b1f4
//0x0a893a72
//0xf97c4000
//0xf97cb98c
//0xf86c4000
//0xf591b7ca
//0x0a893e8a
//0xf0944000
//0xf094b0ce
//0xefa84000
//0xe533ad60
//0x0a893a8a
//0xf41a4000
//0xf41ab454
//0xf3564000
//0xf0d5b2f6
//0x0a893eb0
//0xe84c4000
//0xe84ca8fe
//0xe77e4000
//0xdd25a5c8
//0x0a893a68
//0xebde4000
//0xebdeac92
//0xeb204000
//0xe8a5ab40
//0x0a893ea8
//0xddbe4000
//0xddbe9f6e
//0xdd084000
//0xd2ff9c7e
//0x0a893a52
//0xe1444000
//0xe144a2fa
//0xe08e4000


//RA0 = RN_GRAM0;
//RA1 = RN_GRAM0;
//RD0 = 128;
//RD1 = RN_GRAM1;
//Add_LMT();
//32bit双序列加法，16bit限幅
//0xa0000000
//0xa0000080
//0xa00000c0
//0xa0000100
//0xa0000140
//0xa0000180
//0xa00001c0
//0xa00006e0
//0xa0000720
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x0f860000
//0x2bfe1e28
//0x459e3920
//0x5ce85186
//0x724067cc
//0x7fff7c4a
//0x7fff7fff
//0x7fff7fff
//0x06480000
//0x12c80c8c
//0x1f1a18f8
//0x2b202528
//0x36ba30fc
//0x41ce3c56
//0x4c40471c
//0x55f65134
//0x7fd87fff
//0x7e9e7f62
//0x7c2a7d8a
//0x78847a7e
//0x73b67642
//0x6dca70e2
//0x66d06a6e
//0x5ed862f2
//0x7fff0c90
//0x7fff7fff
//0x7fff7fff
//0x00007fff
//0x80014000
//0x40008001
//0x7fff0000
//0x3bc6b74a
//0x08428001
//0x80014000
//0x00004000
//0x7f560000
//0x80018001
//0x08428001
//0x80014000
//0x7dd00000
//0x7fff8001
//0x7fffb042
//0x0a888001
//0x80014000
//0x00002000
//0x7f240000
//0x80018001
//0x0a888001
//0xf9e04000
//0xf9e07fff
//0x7fff4000
//0x7fffb4a6
//0x0a888001
//0xfc764000
//0xfc767fff
//0x7fff4000
//0x7fffbaa0
//0x0a888001
//0xf6d84000
//0xf6d87fff
//0x7fff4000
//0x7fffb1f4
//0x0a888001
//0xf97c4000
//0xf97c7fff
//0x7fff4000
//0x7fffb7ca
//0x0a888001
//0xf0944000
//0xf0947fff
//0x7fff4000
//0x7fffad60
//0x0a888001
//0xf41a4000
//0xf41a7fff
//0x7fff4000
//0x7fffb2f6
//0x0a888001
//0xe84c4000
//0xe84c7fff
//0x7fff4000
//0x7fffa5c8
//0x0a888001
//0xebde4000
//0xebde7fff
//0x7fff4000
//0x7fffab40
//0x0a888001
//0xddbe4000
//0xddbe7fff
//0x7fff4000
//0x7fff9c7e
//0x0a888001
//0xe1444000
//0xe1447fff
//0x7fff4000


//RA0 = RN_GRAM0;
//RA1 = RN_GRAM0;
//RD0 = 128;
//RD1 = 0x55aa55aa;
//Cal_Single_Add_Const();
//单序列加常量，高低16bit都有效
//0x25aa55aa
//0x25aa55ea
//0x25aa560a
//0x25aa562a
//0x25aa564a
//0x25aa566a
//0x25aa568a
//0x25aa591a
//0x25aa593a
//0x55aa55aa
//0x55aa55aa
//0x55aa55aa
//0x55aa55aa
//0x55aa55aa
//0x55aa55aa
//0x55aa55aa
//0xce23d5a9
//0xc174c771
//0xb730bc10
//0xaeb5b2c1
//0xa796aaff
//0xa184a46f
//0x9c499ecf
//0x97bb99ee
//0x97a295aa
//0x9b68998b
//0x9efc9d37
//0xa265a0b5
//0xa5aaa40c
//0xa8cda73f
//0xabd3aa53
//0xaebfad4c
//0x5d6d55aa
//0x6ba964be
//0x7879723a
//0x841e7e6d
//0x8eca8990
//0x98a493cf
//0xa1c99d4b
//0xaa52a620
//0x58ce55aa
//0x5f0e5bf0
//0x65376226
//0x6b3a683e
//0x71076e28
//0x769173d5
//0x7bca7938
//0x80a57e44
//0x959695aa
//0x94f9955b
//0x93bf946f
//0x91ec92e9
//0x8f8590cb
//0x8c8f8e1b
//0x89128ae1
//0x85168723
//0xba2f5bf2
//0xba31d5a0
//0xba32d5a8
//0x55aad5a9
//0xf55775aa
//0x75aaf557
//0xb36b55aa
//0x738d314f
//0x59cbd5aa
//0x157c75aa
//0x55aa75aa
//0x955555aa
//0xd5aaf579
//0x59cbd5aa
//0x149275aa
//0x949255aa
//0xd008f5aa
//0xc6fc2dcb
//0x5aeef119
//0x159f75aa
//0x55aa65aa
//0x953c55aa
//0xd5aae57b
//0x5aeed5aa
//0x529a75aa
//0x529ab29c
//0xd15a75aa
//0xcbce2ffd
//0x5aeef2dc
//0x53e575aa
//0x53e5b3e7
//0xd35675aa
//0xd1da32fa
//0x5aeef4ea
//0x511675aa
//0x5116b11e
//0xcfef75aa
//0xca822ea4
//0x5aeef2e3
//0x526875aa
//0x5268b270
//0xd1e075aa
//0xd072318f
//0x5aeef4ef
//0x4df475aa
//0x4df4ae11
//0xcd7e75aa
//0xc8432c5a
//0x5aeef2ef
//0x4fb775aa
//0x4fb7afd4
//0xcf5575aa
//0xce142f25
//0x5aeef502
//0x49d075aa
//0x49d0aa29
//0xc96975aa
//0xc43c288e
//0x5aeef2de
//0x4b9975aa
//0x4b99abf3
//0xcb3a75aa
//0xc9fc2b4a
//0x5aeef4fe
//0x448975aa
//0x4489a561
//0xc42e75aa
//0xbf2923e9
//0x5aeef2d3
//0x464c75aa
//0x464ca727
//0xc5f175aa


//RA0 = RN_GRAM0;
//RA1 = RN_GRAM1;
//RD0 = 128;
//LMT32To16();
//32bit序列转16bit序列
//0x80018001
//0x80018001
//0x80018001
//0x80018001
//0x00008001
//0x00000000
//0x00000000
//0x00000000
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff7fff
//0x7fff8001
//0x7fff7fff
//0x80017fff
//0x7fff2000
//0x7fff8001
//0x7fff8001
//0x7fff7fff
//0x80017fff
//0x7fff1000
//0x7fff8001
//0x80018001
//0x7fff7fff
//0x80017fff
//0x7fff8001
//0x7fff7fff
//0x80018001
//0x7fff7fff
//0x80017fff
//0x7fff8001
//0x7fff7fff
//0x80018001
//0x7fff7fff
//0x80017fff
//0x7fff8001
//0x7fff7fff
//0x80018001
//0x7fff7fff
//0x80017fff
//0x7fff8001
//0x7fff7fff
//0x80018001
//0x7fff7fff
//0x80017fff
//0x7fff8001


//_Ru_Multi(0x11aa11aa, 0x33cc22bb);
//RD0=0x6f0b7b2e
//RD1=0x0392f770


//DMA_TransDimin_PATH1(RN_GRAM0, RN_GRAM1, 64);
//0x1de3dba5
//0x5dc10000
//0x20009fad
//0x9fad2000
//0x00007fff
//0x64887ffe
//0x64877ff6
//0x64850648
//0x2f6c3179
//0x33683537
//0x36e53871
//0x39db3b21
//0x3c423d3f
//0x3e153ec5
//0x3f4f3fb1
//0x3fec4000
//0x2afb289a
//0x2620238e
//0x20e71e2b
//0x1b5d187e
//0x15901294
//0x0f8d0c7c
//0x09640646
//0x03240000
//0x54a85076
//0x4c1f47a1
//0x42fa3e25
//0x392033e6
//0x2e7428c3
//0x22cf1c90
//0x15ff0f14
//0x07c30000
//0x591557a2
//0x562954a9
//0x53235195
//0x50004e62
//0x4cbb4b0b
//0x4952478d
//0x45be43e1
//0x41f84000
//0x42114444
//0x469f4925
//0x4bda4ec5
//0x51ec5555
//0x590b5d17
//0x61866666
//0x6bca71c7
//0x78797fff
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0xd0000390
//0xd0000370
//0xd00000e0
//0xd00000c0
//0xd00000a0
//0xd0000080
//0xd0000060
//0xd0000040
//0xd0000000
//RA0 = RN_GRAM0;
//RA1 = RN_GRAM0;
//RD1 = RN_GRAM1;
//RD0 = 128;		//序列长度
//ModulationToZero();
//0x31ff0000
//0x11ffffe8
//0x11ffffdc
//0x11ffffd0
//0x11ffffc4
//0x11ffffb8
//0x11ffffac
//0x11fffeb6
//0x11fffeaa
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x71637878
//0x5ac45fcf
//0x4a4d4e04
//0x3df140c1
//0x346e369d
//0x2cf22ead
//0x26f6285b
//0x2219233c
//0x21ff20fc
//0x25ff24fc
//0x29ff28fc
//0x2dff2cfc
//0x320030fd
//0x35ff34fc
//0x39ff38fc
//0x3dff3cfd
//0x00780000
//0x03c70297
//0x097707c4
//0x10db0ecb
//0x197e1729
//0x230b2084
//0x2d442a98
//0x37fd3537
//0x00130000
//0x00b00075
//0x01e30184
//0x03a10321
//0x05d9053c
//0x087507c1
//0x0b5b0a97
//0x0e6e0da2
//0x1fec1ff6
//0x1f4f1f80
//0x1e1c1e71
//0x1c5e1cd5
//0x1a261ab9
//0x178a1834
//0x14a5155f
//0x11911254
//0x4ef004ee
//0x4ef3647f
//0x4ef56486
//0x00000000
//0x487ce7eb
//0x0800e7eb
//0x44ab0000
//0x06faf782
//0x0022fbdf
//0x202eeff4
//0x00000000
//0x1fab0000
//0x7ffe6030
//0x0022fbdf
//0x211aefba
//0x1eea0000
//0x74fba439
//0x6452dcb3
//0x0037fbdc
//0x200beffd
//0x00000000
//0x1f920000
//0x7ffe702e
//0x0037fabc
//0x0012ff3c
//0x0012fdc6
//0x77851eec
//0x6d0add39
//0x0037fbef
//0x0006ff8e
//0x0006feb2
//0x7b621f6b
//0x787dde58
//0x0037fc05
//0x0029fedb
//0x0029fcba
//0x74cb1e91
//0x6aa8dc60
//0x0037fbef
//0x0015ff2f
//0x0015fda3
//0x78881f0d
//0x75c6dd5d
//0x0037fc05
//0x0076fe12
//0x0076faac
//0x702d1df5
//0x6699db03
//0x0037fbf0
//0x0046fe83
//0x0046fbcf
//0x73a61e6a
//0x7147dbc3
//0x0037fc06
//0x0118fd09
//0x0118f82d
//0x68aa1cef
//0x5f83d908
//0x0037fbef
//0x00cafd7b
//0x00caf936
//0x6bf91d64
//0x69b4d97d
//0x0037fc05
//0x024afbb7
//0x024af555
//0x5f6b1ba1
//0x56f2d6fe
//0x0037fbef
//0x01d8fc28
//0x01d8f637
//0x627c1c11


//RA0 = RN_GRAM0;
//RA1 = RN_GRAM0;
//RD1 = RN_GRAM1;
//RD0 = 128;		//序列长度
//DualSequMulti_Q0();
//0x11ff0000
//0x11ff0000
//0x11ff0000
//0x11ff0000
//0x11ff0000
//0x11ff0001
//0x11ff0001
//0x11ff0017
//0x11ff0019
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x71637ffe
//0x5ac46522
//0x4a4d51ea
//0x3df143b3
//0x346e38e3
//0x2cf23079
//0x26f629cc
//0x22192468
//0x21ff2000
//0x25ff23ff
//0x29ff27ff
//0x2dff2bfe
//0x32002fff
//0x35ff33ff
//0x39ff37fe
//0x3dff3bff
//0x00780000
//0x03c701c6
//0x0977065f
//0x10db0cfb
//0x197e150a
//0x230b1e2b
//0x2d442815
//0x37fd3293
//0x00130000
//0x00b0004e
//0x01e30137
//0x03a102b2
//0x05d904af
//0x0875071c
//0x0b5b09e0
//0x0e6e0ce0
//0x1fec2000
//0x1f4f1fb1
//0x1e1c1ec8
//0x1c5e1d4e
//0x1a261b50
//0x178a18e3
//0x14a5161f
//0x1191131f
//0x4ef0004e
//0x4ef37fec
//0x4ef57ffc
//0x00007ffe
//0x487c0800
//0x0800487c
//0x44ab0000
//0x06fa0a53
//0x00227ffe
//0x202e0800
//0x00000800
//0x1fab0000
//0x7ffe4849
//0x00227ffe
//0x211a0800
//0x1eea0000
//0x74fb47ff
//0x64520c6b
//0x00374f03
//0x200b0800
//0x00000200
//0x1f920000
//0x7ffe6252
//0x00377ffe
//0x00120800
//0x0012437d
//0x77850800
//0x6d0a0b16
//0x00374c44
//0x00060800
//0x00064561
//0x7b620800
//0x787d0966
//0x00374921
//0x00290800
//0x00294157
//0x74cb0800
//0x6aa80be5
//0x00374c39
//0x00150800
//0x0015433d
//0x78880800
//0x75c60a2f
//0x00374919
//0x00760800
//0x00763d0d
//0x702d0800
//0x66990d55
//0x00374c27
//0x00460800
//0x00463f83
//0x73a60800
//0x71470b97
//0x003748fc
//0x01180800
//0x011837c7
//0x68aa0800
//0x5f830fe5
//0x00374c41
//0x00ca0800
//0x00ca3a2a
//0x6bf90800
//0x69b40e07
//0x00374902
//0x024a0800
//0x024a31a4
//0x5f6b0800
//0x56f21356
//0x00374c52
//0x01d80800
//0x01d833e0
//0x627c0800

//RA0 = RN_GRAM0;
//RA1 = RN_GRAM1;
//RD0 = 128;		//序列长度
//RD1 = 0x200;
//MultiConst24_DivQ7_LMT();
//序列与Const相乘运算，
//0xfec00000
//0xff400000
//0xff400000
//0xff400000
//0xff400000
//0xff400000
//0xff400000
//0xff400000
//0xff400000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x01e10000
//0x01af0000
//0x01860000
//0x01640000
//0x01470000
//0x012f0000
//0x011a0000
//0x01080000
//0x01070000
//0x01160000
//0x01250000
//0x01320000
//0x01400000
//0x014c0000
//0x01580000
//0x01640000
//0x001f0000
//0x00570000
//0x008b0000
//0x00b90000
//0x00e40000
//0x010b0000
//0x01300000
//0x01520000
//0x000c0000
//0x00250000
//0x003e0000
//0x00560000
//0x006d0000
//0x00830000
//0x00980000
//0x00ab0000
//0x00ff0000
//0x00fd0000
//0x00f80000
//0x00f10000
//0x00e70000
//0x00db0000
//0x00cd0000
//0x00bd0000
//0x01920000
//0x01920000
//0x01920000
//0x00000000
//0xfe7e0000
//0x00800000
//0x01770000
//0x00770000
//0x00100000
//0xfeff0000
//0x00000000
//0x00fe0000
//0xfe000000
//0x00100000
//0xfefb0000
//0x00fb0000
//0x01e90000
//0x01c50000
//0x00150000
//0xfeff0000
//0x00000000
//0x00fe0000
//0xfe000000
//0x00150000
//0xfff30000
//0xfff30000
//0x01ee0000
//0x01d80000
//0x00150000
//0xfff80000
//0xfff80000
//0x01f60000
//0x01f00000
//0x00150000
//0xffed0000
//0xffed0000
//0x01e90000
//0x01d30000
//0x00150000
//0xfff20000
//0xfff20000
//0x01f00000
//0x01eb0000
//0x00150000
//0xffe10000
//0xffe10000
//0x01df0000
//0x01ca0000
//0x00150000
//0xffe80000
//0xffe80000
//0x01e60000
//0x01e10000
//0x00150000
//0xffd00000
//0xffd00000
//0x01ce0000
//0x01ba0000
//0x00150000
//0xffd70000
//0xffd70000
//0x01d60000
//0x01d10000
//0x00150000
//0xffbb0000
//0xffbb0000
//0x01ba0000
//0x01a50000
//0x00150000
//0xffc20000
//0xffc20000
//0x01c10000

//RA0 = RN_GRAM0;
//RA1 = RN_GRAM0;
//RD0 = 128;		//序列长度
//RD1 = RN_GRAM1;
//SeqMulti_DivQ7();
//双序列乘运算
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x00000000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x787d0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x13ba0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x00000000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x22180000
//0x7fff0000
//0x00000000
//0x7fff0000
//0x7fff0000
//0x22180000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x7fff0000
//0x00000000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x12c10000
//0x12c10000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x06430000
//0x06430000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x29eb0000
//0x29eb0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x153a0000
//0x153a0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x76ea0000
//0x76ea0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x46c90000
//0x46c90000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x7fff0000
//0x37740000
//0x7fff0000
//0x7fff0000
//0x7fff0000


//RD0 = RN_GRAM0;
//RD1 = 128;
//FindMaxMin();
//CCpu::rd0	0x00007fff	int
//CCpu::rd1	0x00008000	int


//RD0 = RN_GRAM0;
//RD1 = 128;
//AbsSum();
//CCpu::rd0	0x0034302c	int


//RD0 = RN_GRAM0;
//RD1 = 128;
//FindMaxIndex();
//CCpu::rd0	0x0000004e	int


