#include "ConstROM.h"

int const_rom[] = {
0x81708000,// log2_llib start here
0x844882DD,
0x871485AF,
0x89D68876,
0x8C8D8B32,
0x8F3A8DE5,
0x91DD908D,
0x9477932B,
0x970895C1,
0x998F984D,
0x9C0E9AD0,
0x9E859D4A,
0xA0F39FBD,
0xA359A227,
0xA5B7A489,
0xA80DA6E3,
0xAA5CA935,
0xACA4AB81,
0xAEE4ADC5,
0xB11EB002,
0xB351B238,
0xB57DB467,
0xB7A2B690,
0xB9C2B8B3,
0xBBDBBACF,
0xBDEEBCE5,
0xBFFBBEF6,
0xC203C100,
0xC405C305,
0xC601C504,
0xC7F8C6FD,
0xC9EAC8F2,
0xCBD6CAE1,
0xCDBDCCCA,
0xCFA0CEAF,
0xD17DD08F,
0xD356D26A,
0xD52AD441,
0xD6FAD613,
0xD8C5D7E0,
0xDA8BD9A9,
0xDC4DDB6D,
0xDE0BDD2D,
0xDFC5DEE9,
0xE17BE0A1,
0xE32DE254,
0xE4DAE404,
0xE684E5B0,
0xE82AE758,
0xE9CDE8FC,
0xEB6CEA9D,
0xED07EC3A,
0xEE9EEDD3,
0xF032EF69,
0xF1C3F0FB,
0xF350F28A,
0xF4DAF415,
0xF661F59E,
0xF7E4F723,
0xF965F8A5,
0xFAE2FA24,
0xFC5CFB9F,
0xFDD3FD18,
0xFF47FE8E,//log2_llib end here
0x00800080,//power_llib  start here
0x00820081,
0x00830082,
0x00840084,
0x00860085,
0x00870087,
0x00890088,
0x008A008A,
0x008C008B,
0x008D008D,
0x008F008E,
0x00900090,
0x00920091,
0x00940093,
0x00950094,
0x00970096,
0x00990098,
0x009A0099,
0x009C009B,
0x009E009D,
0x009F009E,
0x00A100A0,
0x00A300A2,
0x00A500A4,
0x00A600A5,
0x00A800A7,
0x00AA00A9,
0x00AC00AB,
0x00AE00AD,
0x00B000AF,
0x00B200B1,
0x00B400B3,
0x00B600B5,
0x00B700B6,
0x00B900B8,
0x00BC00BA,
0x00BE00BD,
0x00C000BF,
0x00C200C1,
0x00C400C3,
0x00C600C5,
0x00C800C7,
0x00CA00C9,
0x00CD00CB,
0x00CF00CE,
0x00D100D0,
0x00D300D2,
0x00D600D4,
0x00D800D7,
0x00DA00D9,
0x00DD00DB,
0x00DF00DE,
0x00E200E0,
0x00E400E3,
0x00E600E5,
0x00E900E8,
0x00EC00EA,
0x00EE00ED,
0x00F100EF,
0x00F300F2,
0x00F600F5,
0x00F900F7,
0x00FB00FA,
0x00FE00FD,//power_llib  end here
0x00800000,//recip_llib  start here
0x007F01FC,
0x007E07E0,
0x007D1196,
0x007C1F07,
0x007B301E,
0x007A44C6,
0x00795CEB,
0x00787878,
0x0077975B,
0x0076B981,
0x0075DED9,
0x00750750,
0x007432D6,
0x0073615A,
0x007292CC,
0x0071C71C,
0x0070FE3C,
0x0070381C,
0x006F74AE,
0x006EB3E4,
0x006DF5B0,
0x006D3A06,
0x006C80D9,
0x006BCA1A,
0x006B15C0,
0x006A63BD,
0x0069B406,
0x00690690,
0x00685B4F,
0x0067B23A,
0x00670B45,
0x00666666,
0x0065C393,
0x006522C3,
0x006483ED,
0x0063E706,
0x00634C06,
0x0062B2E4,
0x00621B97,
0x00618618,
0x0060F25D,
0x00606060,
0x005FD017,
0x005F417D,
0x005EB488,
0x005E2932,
0x005D9F73,
0x005D1745,
0x005C90A1,
0x005C0B81,
0x005B87DD,
0x005B05B0,
0x005A84F3,
0x005A05A0,
0x005987B1,
0x00590B21,
0x00588FE9,
0x00581605,
0x00579D6E,
0x00572620,
0x0056B015,
0x00563B48,
0x0055C7B4,
0x00555555,
0x0054E425,
0x0054741F,
0x00540540,
0x00539782,
0x00532AE2,
0x0052BF5A,
0x005254E7,
0x0051EB85,
0x0051832F,
0x00511BE1,
0x0050B598,
0x00505050,
0x004FEC04,
0x004F88B2,
0x004F2656,
0x004EC4EC,
0x004E6470,
0x004E04E0,
0x004DA637,
0x004D4873,
0x004CEB91,
0x004C8F8D,
0x004C3464,
0x004BDA12,
0x004B8097,
0x004B27ED,
0x004AD012,
0x004A7904,
0x004A22C0,
0x0049CD42,
0x00497889,
0x00492492,
0x0048D159,
0x00487EDE,
0x00482D1C,
0x0047DC11,
0x00478BBC,
0x00473C1A,
0x0046ED29,
0x00469EE5,
0x0046514E,
0x00460460,
0x0045B81A,
0x00456C79,
0x0045217C,
0x0044D720,
0x00448D63,
0x00444444,
0x0043FBC0,
0x0043B3D5,
0x00436C82,
0x004325C5,
0x0042DF9B,
0x00429A04,
0x004254FC,
0x00421084,
0x0041CC98,
0x00418937,
0x0041465F,
0x00410410,
0x0040C246,
0x00408102,
0x00404040,
0x0B500000,//sqrt_llib start here
0x13981000,
0x194C16A0,
0x1DEE1BB6,
0x21F02000,
0x258523C6,
0x28CA2731,
0x2BD12A54,
0x2EA52D41,
0x31503000,
0x33D83298,
0x36423510,
0x3891376C,
0x3AC939B0,
0x3CED3BDD,
0x3EFD3DF7,
0x40FE4000,
0x42EE41F8,
0x44D143E1,
0x46A745BE,
0x4871478D,
0x4A304952,
0x4BE54B0B,
0x4D904CBB,
0x4F324E62,
0x50CB5000,
0x525D5195,
0x53E75323,
0x556A54A9,
0x56E65629,
0x585C57A2,
0x59CC5915,
0x5B365A82,
0x5C9B5BE9,
0x5DFA5D4B,
0x5F545EA8,
0x60AA6000,
0x61FA6152,
0x634762A1,
0x648E63EB,
0x65D26531,
0x67126673,
0x684E67B1,
0x698668EB,
0x6ABB6A21,
0x6BED6B54,
0x6D1A6C84,
0x6E456DB0,
0x6F6D6ED9,
0x70917000,
0x71B37123,
0x72D27243,
0x73EE7360,
0x7507747B,
0x761E7593,
0x773276A8,
0x784477BB,
0x795378CC,
0x7A6079DA,
0x7B6B7AE5,
0x7C737BEF,
0x7D797CF6,
0x7E7D7DFB,
0x7F7F7EFE

};



////////////////////////////////////////////////////////
//  名称:
//      ConstROM_Read_Word
//  功能:
//      从ConstROM用于读取16比特数据，代替MMU功能
//  参数:
//      1.RD0:数据地址(字节地址)
//  返回值:
//      1.RD0:16比特数据
////////////////////////////////////////////////////////
Sub ConstROM_Read_Word
{
    push(RA0);

    push(RD0);
    RD0_ClrByteH8;
    RF_ShiftR2(RD0);
    //RD0 += 0xD0000000;
    //RA0 = RD0;
    RD1 = *(const_rom + RD0.m_data);
    pop(RD0);
    if (RD0_Bit1 == 1) goto L_ConstROM_Read_Word_1;
    RF_GetL16(RD1);
    goto L_ConstROM_Read_Word_End;

L_ConstROM_Read_Word_1:
    RF_GetH16(RD1);

L_ConstROM_Read_Word_End:
    RD0 = RD1;
    RD0_SignExtL16;
    pop(RA0);


    Return(0);

}

////////////////////////////////////////////////////////
//  名称:
//      ConstROM_Read_DWord
//  功能:
//      从ConstROM用于读取32比特数据，代替MMU功能
//  参数:
//      1.RD0:数据地址(DWORD地址)
//  返回值:
//      1.RD0:32比特数据
////////////////////////////////////////////////////////
Sub ConstROM_Read_DWord
{
    RD0_ClrByteH8;
    RD0 = *(const_rom + RD0.m_data);
    Return(0);

}